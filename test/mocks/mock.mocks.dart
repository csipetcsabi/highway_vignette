// Mocks generated by Mockito 5.4.5 from annotations
// in highway_vignette/test/mocks/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:highway_vignette/api/export.dart' as _i2;
import 'package:highway_vignette/features/highway_vignette/domain/repository/highway_repository.dart'
    as _i5;
import 'package:highway_vignette/utils/price_calculator.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHighwayVignettes_0 extends _i1.SmartFake
    implements _i2.HighwayVignettes {
  _FakeHighwayVignettes_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetV1HighwayVehicleResponse_1 extends _i1.SmartFake
    implements _i2.GetV1HighwayVehicleResponse {
  _FakeGetV1HighwayVehicleResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetV1HighwayInfoResponse_2 extends _i1.SmartFake
    implements _i2.GetV1HighwayInfoResponse {
  _FakeGetV1HighwayInfoResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostV1HighwayOrderResponse_3 extends _i1.SmartFake
    implements _i2.PostV1HighwayOrderResponse {
  _FakePostV1HighwayOrderResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PriceCalculatorMixin].
///
/// See the documentation for Mockito's code generation for more information.
class MockPriceCalculatorMixin extends _i1.Mock
    implements _i3.PriceCalculatorMixin {
  @override
  double get usageFee =>
      (super.noSuchMethod(
            Invocation.getter(#usageFee),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  set usageFee(double? _usageFee) => super.noSuchMethod(
    Invocation.setter(#usageFee, _usageFee),
    returnValueForMissingStub: null,
  );

  @override
  String getVignetteName(String? vignette, _i2.Payload? payload) =>
      (super.noSuchMethod(
            Invocation.method(#getVignetteName, [vignette, payload]),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getVignetteName, [vignette, payload]),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.method(#getVignetteName, [vignette, payload]),
            ),
          )
          as String);

  @override
  String getCountyNameById(String? id, _i2.Payload? payload) =>
      (super.noSuchMethod(
            Invocation.method(#getCountyNameById, [id, payload]),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getCountyNameById, [id, payload]),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.method(#getCountyNameById, [id, payload]),
            ),
          )
          as String);

  @override
  String getVignettePrice(String? vignette, _i2.Payload? payload) =>
      (super.noSuchMethod(
            Invocation.method(#getVignettePrice, [vignette, payload]),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getVignettePrice, [vignette, payload]),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.method(#getVignettePrice, [vignette, payload]),
            ),
          )
          as String);

  @override
  _i2.HighwayVignettes getVignette(String? vignette, _i2.Payload? payload) =>
      (super.noSuchMethod(
            Invocation.method(#getVignette, [vignette, payload]),
            returnValue: _FakeHighwayVignettes_0(
              this,
              Invocation.method(#getVignette, [vignette, payload]),
            ),
            returnValueForMissingStub: _FakeHighwayVignettes_0(
              this,
              Invocation.method(#getVignette, [vignette, payload]),
            ),
          )
          as _i2.HighwayVignettes);

  @override
  double calculateTax(List<String>? vignettesList, _i2.Payload? payload) =>
      (super.noSuchMethod(
            Invocation.method(#calculateTax, [vignettesList, payload]),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  String calculateTotalPrice(
    List<String>? vignettes,
    _i2.Payload? payload, {
    bool? withTax = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #calculateTotalPrice,
              [vignettes, payload],
              {#withTax: withTax},
            ),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(
                #calculateTotalPrice,
                [vignettes, payload],
                {#withTax: withTax},
              ),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.method(
                #calculateTotalPrice,
                [vignettes, payload],
                {#withTax: withTax},
              ),
            ),
          )
          as String);
}

/// A class which mocks [HighwayRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHighwayRepository extends _i1.Mock implements _i5.HighwayRepository {
  @override
  _i6.Future<_i2.GetV1HighwayVehicleResponse> getVehicleInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getVehicleInfo, []),
            returnValue: _i6.Future<_i2.GetV1HighwayVehicleResponse>.value(
              _FakeGetV1HighwayVehicleResponse_1(
                this,
                Invocation.method(#getVehicleInfo, []),
              ),
            ),
            returnValueForMissingStub:
                _i6.Future<_i2.GetV1HighwayVehicleResponse>.value(
                  _FakeGetV1HighwayVehicleResponse_1(
                    this,
                    Invocation.method(#getVehicleInfo, []),
                  ),
                ),
          )
          as _i6.Future<_i2.GetV1HighwayVehicleResponse>);

  @override
  _i6.Future<_i2.GetV1HighwayInfoResponse> getHighwayInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getHighwayInfo, []),
            returnValue: _i6.Future<_i2.GetV1HighwayInfoResponse>.value(
              _FakeGetV1HighwayInfoResponse_2(
                this,
                Invocation.method(#getHighwayInfo, []),
              ),
            ),
            returnValueForMissingStub:
                _i6.Future<_i2.GetV1HighwayInfoResponse>.value(
                  _FakeGetV1HighwayInfoResponse_2(
                    this,
                    Invocation.method(#getHighwayInfo, []),
                  ),
                ),
          )
          as _i6.Future<_i2.GetV1HighwayInfoResponse>);

  @override
  _i6.Future<_i2.PostV1HighwayOrderResponse> postHighwayOrder(dynamic body) =>
      (super.noSuchMethod(
            Invocation.method(#postHighwayOrder, [body]),
            returnValue: _i6.Future<_i2.PostV1HighwayOrderResponse>.value(
              _FakePostV1HighwayOrderResponse_3(
                this,
                Invocation.method(#postHighwayOrder, [body]),
              ),
            ),
            returnValueForMissingStub:
                _i6.Future<_i2.PostV1HighwayOrderResponse>.value(
                  _FakePostV1HighwayOrderResponse_3(
                    this,
                    Invocation.method(#postHighwayOrder, [body]),
                  ),
                ),
          )
          as _i6.Future<_i2.PostV1HighwayOrderResponse>);
}

/// A class which mocks [Payload].
///
/// See the documentation for Mockito's code generation for more information.
class MockPayload extends _i1.Mock implements _i2.Payload {
  @override
  List<_i2.HighwayVignettes> get highwayVignettes =>
      (super.noSuchMethod(
            Invocation.getter(#highwayVignettes),
            returnValue: <_i2.HighwayVignettes>[],
            returnValueForMissingStub: <_i2.HighwayVignettes>[],
          )
          as List<_i2.HighwayVignettes>);

  @override
  List<_i2.VehicleCategories> get vehicleCategories =>
      (super.noSuchMethod(
            Invocation.getter(#vehicleCategories),
            returnValue: <_i2.VehicleCategories>[],
            returnValueForMissingStub: <_i2.VehicleCategories>[],
          )
          as List<_i2.VehicleCategories>);

  @override
  List<_i2.Counties> get counties =>
      (super.noSuchMethod(
            Invocation.getter(#counties),
            returnValue: <_i2.Counties>[],
            returnValueForMissingStub: <_i2.Counties>[],
          )
          as List<_i2.Counties>);

  @override
  Map<String, Object?> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, Object?>{},
            returnValueForMissingStub: <String, Object?>{},
          )
          as Map<String, Object?>);
}
